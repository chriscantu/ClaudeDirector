# Pre-commit configuration for ClaudeDirector
repos:
  # Python formatting - RUNS FIRST TO FIX FORMATTING BEFORE OTHER CHECKS
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        args: [--line-length=88]
        types: [python]
        exclude: ^(venv/|\.git/|\.claudedirector/backups/|leadership-workspace/)

  # Basic code quality - RUNS AFTER FORMATTING
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']

  # CODE BLOAT PREVENTION (RUNS EARLY TO CATCH DUPLICATION)
  - repo: local
    hooks:
      # README CONTENT PROTECTION (FIXED APPROACH)
      - id: readme-content-protection
        name: üõ°Ô∏è README CONTENT PROTECTION (Content-Aware)
        entry: python3 .claudedirector/tools/ci/readme_content_protection.py
        language: system
        files: '^README\.md$'
        pass_filenames: true
        stages: [pre-commit]
        verbose: true
      # TEMPORARILY DISABLED: Method not fully implemented yet
      # - id: enhanced-duplication-detection
      #   name: üõ°Ô∏è ENHANCED DUPLICATION DETECTION (TS-4 Prevention System)
      #   entry: python3 .claudedirector/tools/architecture/enhanced_duplication_detector.py --scan-repository
      #   language: system
      #   pass_filenames: false
      #   stages: [pre-commit]
      #   verbose: true

      - id: code-bloat-prevention
        name: üèóÔ∏è CODE BLOAT PREVENTION (MCP-Enhanced) - STRICT ENFORCEMENT
        entry: python3 .claudedirector/tools/validate.py --modules bloat .
        language: system
        types: [python]
        stages: [pre-commit]
        pass_filenames: false
        verbose: true
        # NOTE: Reverted to strict threshold=8 after fixing Phase 4 architectural violations

  # DEVELOPMENT POLICY ENFORCEMENT
  - repo: local
    hooks:
      - id: code-bloat-prevention-secondary
        name: üèóÔ∏è CODE BLOAT PREVENTION (MCP-Enhanced) - SECONDARY CHECK
        entry: python3 .claudedirector/tools/validate.py --modules bloat .
        language: system
        types: [python]
        stages: [pre-commit]
        pass_filenames: false
        verbose: true
        # NOTE: Reverted to strict threshold=8 after fixing Phase 4 architectural violations

      - id: documentation-size-policy
        name: üìã DOCUMENTATION SIZE POLICY (500 lines max - aligned with code)
        entry: python3 .claudedirector/tools/quality/check_doc_size.py
        language: system
        files: '\.md$'
        pass_filenames: true
        stages: [pre-commit]
        verbose: true

      - id: architecture-compliance-policy
        name: üèóÔ∏è ARCHITECTURE COMPLIANCE POLICY
        entry: python3 .claudedirector/tools/quality/check_architecture.py
        language: system
        files: '^\.claudedirector/lib/.*\.py$'
        pass_filenames: true
        stages: [pre-commit]
        verbose: true

      - id: p0-test-protection-policy
        name: üõ°Ô∏è P0 TEST PROTECTION POLICY
        entry: python3 .claudedirector/tools/quality/check_p0_tests.py
        language: system
        files: '^\.claudedirector/tests/.*test.*p0.*\.py$|^\.claudedirector/tests/.*_p0_.*\.py$'
        exclude: '^\.claudedirector/tests/p0_enforcement/run_mandatory_p0_tests\.py$'
        pass_filenames: true
        stages: [pre-commit]
        verbose: true

  # CRITICAL SECURITY ENFORCEMENT
  - repo: local
    hooks:
      - id: enhanced-security-scanner
        name: üõ°Ô∏è ENHANCED SECURITY SCAN
        entry: python3 .claudedirector/tools/validate.py --modules security .
        language: system
        pass_filenames: false
        stages: [pre-commit]
        always_run: true
        verbose: true
      - id: stakeholder-name-scanner
        name: üö® STAKEHOLDER INTELLIGENCE SCAN
        entry: python3 .claudedirector/tools/quality/stakeholder_name_scanner.py --staged
        language: system
        pass_filenames: false
        stages: [pre-commit]
        always_run: true
      # TEMPORARILY DISABLED: File size violations are pre-existing technical debt
      # Re-enable after Phase 5.3 functional organization is complete
      # - id: file-size-guard
      #   name: üö® FILE SIZE GUARD - PREVENT MONOLITHIC FILES
      #   entry: python3 .claudedirector/tools/quality/file_size_guard.py
      #   language: system
      #   pass_filenames: false
      #   stages: [pre-commit]
      #   always_run: true
      #   verbose: true
      - id: p0-ci-coverage-guard
        name: üõ°Ô∏è P0 CI COVERAGE GUARD
        entry: python3 .claudedirector/tools/ci/p0_ci_coverage_guard.py
        language: system
        pass_filenames: false
        stages: [pre-commit]
        always_run: true
        files: '^(\.github/workflows/.*\.yml|\.claudedirector/tests/p0_enforcement/.*\.yaml)$'
        verbose: true

  # MANDATORY TEST VALIDATION (RE-ENABLED - MODULE IMPORT FIXED)
  - repo: local
    hooks:
      - id: mandatory-test-validation
        name: üõ°Ô∏è MANDATORY TEST VALIDATION
        entry: python3 .claudedirector/tools/ci/mandatory_test_validator.py
        language: system
        pass_filenames: false
        stages: [pre-commit]
        always_run: true
        verbose: true

  # Architectural governance
  - repo: local
    hooks:
      # TEMPORARILY DISABLED: 275 SOLID violations are pre-existing technical debt
      # Re-enable after Phase 5.3 functional organization + create separate SOLID cleanup epic
      # - id: solid-principle-validator
      #   name: üèóÔ∏è SOLID Principle Validation
      #   entry: python .claudedirector/tools/architecture/solid_validator.py
      #   language: system
      #   files: ^\.claudedirector/lib/.*\.py$
      #   pass_filenames: true
      #   always_run: false
      #   verbose: true

      # P1 Feature Testing
      - id: p1-unit-tests
        name: P1 Unit Tests
        entry: python .claudedirector/tools/quality/run_p1_unit_tests.py
        language: python
        files: ^(lib/claudedirector/p1_features/.*\.py|tests/p1_features/unit/.*\.py)$
        pass_filenames: false

      - id: p1-test-coverage
        name: P1 Test Coverage Check
        entry: python .claudedirector/tools/quality/check_p1_coverage.py
        language: python
        files: ^lib/claudedirector/p1_features/.*\.py$
        pass_filenames: false

      - id: ai-cleanup-enforcement
        name: üßπ AI Cleanup Enforcement
        entry: bash -c 'if [ "$GITHUB_ACTIONS" = "true" ]; then echo "‚ö†Ô∏è Skipping AI cleanup in CI"; exit 0; else exec .claudedirector/tools/hooks/pre-commit-ai-cleanup; fi'
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit]
