# Pre-commit configuration for ClaudeDirector
repos:
  # Python formatting - RUNS FIRST TO FIX FORMATTING BEFORE OTHER CHECKS
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        args: [--line-length=88]
        types: [python]
        exclude: ^(venv/|\.git/|\.claudedirector/backups/|leadership-workspace/|README\.md$)

  # Basic code quality - RUNS AFTER FORMATTING
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: '^README\.md$'  # CRITICAL: Exclude README from modifications
      - id: end-of-file-fixer
        exclude: '^README\.md$'  # CRITICAL: Exclude README from modifications
      - id: check-yaml
        exclude: '^README\.md$'
      - id: check-added-large-files
        args: ['--maxkb=1000']
        exclude: '^README\.md$'

  # CODE BLOAT PREVENTION (RUNS EARLY TO CATCH DUPLICATION)
  - repo: local
    hooks:
      # README PROTECTION: Consolidated to AI cleanup exemption system only
      # Removed competing protection hook to prevent system interference
      # README.md is protected by .claudedirector/tools/hooks/pre-commit-ai-cleanup exemptions
      # TEMPORARILY DISABLED: Method not fully implemented yet
      # - id: enhanced-duplication-detection
      #   name: üõ°Ô∏è ENHANCED DUPLICATION DETECTION (TS-4 Prevention System)
      #   entry: python3 .claudedirector/tools/architecture/enhanced_duplication_detector.py --scan-repository
      #   language: system
      #   pass_filenames: false
      #   stages: [pre-commit]
      #   verbose: true

      - id: code-bloat-prevention
        name: üèóÔ∏è CODE BLOAT PREVENTION (MCP-Enhanced) - STRICT ENFORCEMENT
        entry: python3 .claudedirector/tools/validate.py . --modules bloat
        language: system
        types: [python]
        stages: [pre-commit]
        pass_filenames: false
        verbose: true
        # NOTE: Reverted to strict threshold=8 after fixing Phase 4 architectural violations

  # DEVELOPMENT POLICY ENFORCEMENT
  - repo: local
    hooks:
      # Secondary bloat check with same configuration (fallback protection)
      - id: code-bloat-prevention-secondary
        name: üèóÔ∏è CODE BLOAT PREVENTION (MCP-Enhanced) - SECONDARY CHECK
        entry: python3 .claudedirector/tools/validate.py . --modules bloat
        language: system
        types: [python]
        stages: [pre-commit]
        pass_filenames: false
        verbose: true

  # DEVELOPMENT POLICY ENFORCEMENT
  - repo: local
    hooks:
      # TEMPORARILY DISABLED: check_doc_size.py script missing
      # - id: documentation-size-policy
      #   name: üìã DOCUMENTATION SIZE POLICY (500 lines max - aligned with code)
      #   entry: python3 .claudedirector/tools/ci/check_doc_size.py
      #   language: system
      #   types: [markdown]
      #   exclude: '^README\.md$'  # CRITICAL: Exclude README from size checks
      #   stages: [pre-commit]
      #   pass_filenames: false

      # TEMPORARILY DISABLED: check_architecture.py requires file arguments
      # - id: architecture-compliance-policy
      #   name: üèóÔ∏è ARCHITECTURE COMPLIANCE POLICY
      #   entry: python3 .claudedirector/tools/quality/check_architecture.py
      #   language: system
      #   types: [python]
      #   stages: [pre-commit]
      #   pass_filenames: false

      # TEMPORARILY DISABLED: protect_p0_tests.py script missing
      # - id: p0-test-protection-policy
      #   name: üõ°Ô∏è P0 TEST PROTECTION POLICY
      #   entry: python3 .claudedirector/tools/quality/protect_p0_tests.py
      #   language: system
      #   types: [python]
      #   stages: [pre-commit]
      #   pass_filenames: false

      - id: cursorrules-validation
        name: üéØ .CURSORRULES VALIDATION (Cross-Platform Compatibility)
        entry: python3 -m pytest .claudedirector/tests/regression/p0_blocking/test_cursorrules_validation_p0.py -v
        language: system
        pass_filenames: false
        stages: [pre-commit]

      - id: enhanced-security-scanner
        name: üõ°Ô∏è ENHANCED SECURITY SCAN
        entry: python3 .claudedirector/tools/validate.py . --modules security
        language: system
        pass_filenames: false
        stages: [pre-commit]
        verbose: true

      # TEMPORARILY DISABLED: check_sensitive_data.py script missing
      # - id: stakeholder-intelligence-scan
      #   name: üö® STAKEHOLDER INTELLIGENCE SCAN
      #   entry: python3 .claudedirector/tools/ci/check_sensitive_data.py
      #   language: system
      #   pass_filenames: false
      #   stages: [pre-commit]

      # TEMPORARILY DISABLED: verify_p0_ci_coverage.py script missing
      # - id: p0-ci-coverage-guard
      #   name: üõ°Ô∏è P0 CI COVERAGE GUARD
      #   entry: python3 .claudedirector/tools/ci/verify_p0_ci_coverage.py
      #   language: system
      #   pass_filenames: false
      #   stages: [pre-commit]

      - id: mandatory-test-validation
        name: üõ°Ô∏è MANDATORY TEST VALIDATION
        entry: python3 .claudedirector/tests/p0_enforcement/run_mandatory_p0_tests.py
        language: system
        pass_filenames: false
        stages: [pre-commit]
        verbose: true

      # TEMPORARILY DISABLED: Commented out pending unit test fix completion
      # P1 unit test enforcement will be re-enabled in PR #169
      # - id: p1-unit-tests
      #   name: üß™ P1 UNIT TESTS (MANDATORY)
      #   entry: python3 -m pytest .claudedirector/tests/unit/ -v --tb=short --maxfail=5
      #   language: system
      #   pass_filenames: false
      #   stages: [pre-commit]
      #   verbose: true

      # TEMPORARILY DISABLED: Commented out pending unit test fix completion
      # Coverage check will be re-enabled in PR #169
      # - id: p1-test-coverage-check
      #   name: üìä P1 TEST COVERAGE CHECK (80% minimum)
      #   entry: python3 .claudedirector/tools/ci/check_test_coverage.py --minimum 80
      #   language: system
      #   types: [python]
      #   pass_filenames: false
      #   stages: [pre-commit]

      # TODO: Re-enable all-unit-tests hook after fixing pre-existing test failures
      # Current Status (as of PR #168):
      # - 122 passing unit tests ‚úÖ
      # - 79 failing unit tests ‚ùå (pre-existing)
      # - 5 collection errors ‚ùå (down from 8, improved by deleting 3 zombie tests)
      # Zombie tests deleted in PR #168:
      # - test_weekly_report_agent.py (tested non-existent API)
      # - test_daily_planning_manager.py (tested dead code DailyPlanningManager)
      # - test_task_004_unified_bridge_enhancement.py (tested non-existent module)
      # Dead code removed in PR #168:
      # - lib/automation/daily_planning_manager.py (never imported, broken implementation)
      # - lib/automation/daily_planning_config.py (deleted as bloat, but still referenced)
      # Follow-up issue needed: Fix remaining 79 failing unit tests + 5 collection errors
      # - id: all-unit-tests
      #   name: üß™ ALL UNIT TESTS (Complete Coverage)
      #   entry: python3 -m pytest .claudedirector/tests/unit/ -v --tb=short --maxfail=3
      #   language: system
      #   files: ^\.claudedirector/(lib/.*\.py|tests/unit/.*\.py)$
      #   pass_filenames: false
      #   stages: [pre-commit]
      #   verbose: true

      - id: ai-cleanup-enforcement
        name: üßπ AI Cleanup Enforcement
        entry: python3 .claudedirector/tools/hooks/pre-commit-ai-cleanup
        language: system
        pass_filenames: false
        stages: [pre-commit]
        # CRITICAL: README.md protection built into this hook
        # Do NOT add exclude patterns here - protection is internal
