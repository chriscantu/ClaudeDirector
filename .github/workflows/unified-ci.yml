name: ClaudeDirector Unified CI/CD Pipeline

# Single source of truth for all CI validation
# Eliminates CI/local discrepancies through unified execution

on:
  push:
    branches: [ main, develop, 'feature/*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  # Single unified job that matches local environment exactly
  unified-validation:
    runs-on: ubuntu-latest
    name: Unified Validation (Local Environment Parity)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies (exact local match)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

          # Install additional CI dependencies
          pip install psutil pyyaml

          # Verify environment matches local
          echo "üîç Python version: $(python --version)"
          echo "üîç Pip version: $(pip --version)"
          echo "üîç Working directory: $(pwd)"
          echo "üîç Repository structure:"
          ls -la

      - name: Initialize Environment (exact local match)
        run: |
          echo "üîß Setting up environment to match local exactly"

          # Set Python path exactly as local environment
          export PYTHONPATH=".claudedirector/lib:.claudedirector/tests/regression:.claudedirector/tests/integration"
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV

          # Set CI flag for environment detection
          export GITHUB_ACTIONS=true
          echo "GITHUB_ACTIONS=true" >> $GITHUB_ENV

          # Initialize database exactly as local
          python .claudedirector/tools/ci/init-database.py

          # Verify database creation
          echo "üîç Database verification:"
          ls -la data/
          if [ -f "data/strategic_memory.db" ]; then
            sqlite3 data/strategic_memory.db ".tables"
          fi

      - name: Run Unified P0 Test Suite (exact local execution)
        run: |
          echo "üöÄ UNIFIED P0 TEST EXECUTION"
          echo "============================================================"
          echo "Using IDENTICAL execution path as local environment"
          echo "Command: python .claudedirector/tests/p0_enforcement/run_mandatory_p0_tests.py"
          echo "============================================================"

          # Run P0 tests using EXACT same command as local
          python .claudedirector/tests/p0_enforcement/run_mandatory_p0_tests.py || {
            echo "‚ùå P0 TESTS FAILED - Same failure would occur locally"
            echo "üìã Check test results for detailed failure information"
            exit 1
          }

          echo "‚úÖ P0 tests completed - identical to local execution"

      - name: Run Pre-commit Validation (exact local match)
        run: |
          echo "üîß PRE-COMMIT VALIDATION (matching local hooks)"

          # Install pre-commit
          pip install pre-commit

          # Run pre-commit hooks with proper failure handling
          pre-commit run --all-files || {
            echo "‚ùå PRE-COMMIT HOOKS FAILED"
            echo "üö® This indicates real quality issues that must be fixed"
            echo "üîß Fix these issues locally and re-push"
            exit 1
          }

          echo "‚úÖ Pre-commit validation completed"

      - name: Validation Summary
        run: |
          echo "============================================================"
          echo "‚úÖ UNIFIED CI VALIDATION COMPLETE"
          echo "============================================================"
          echo "üéØ Environment Parity: 100% match with local"
          echo "üß™ Test Execution: Identical to local commands"
          echo "üîß Pre-commit: Same hooks as local environment"
          echo "üìä Result: CI failures now match local failures exactly"
          echo "============================================================"
